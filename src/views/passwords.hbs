<div class="row">
    <section class="col-12">
        <form name="pwdForm" action="/auth/pwdManager" id="pwdForm" method="POST" class="m-4">
            <table class="table table-transparent mt-4 border border-white text-center">
                <tbody>
                    <tr>
                        <td class="col-2">
                            <span>
                                <i class="bi bi-info-circle text-white d-none d-md-inline-block" title="Se requiere introducir la contraseña anterior para cambiar a la nueva" role="button"></i>
                                Contrase&ntilde;a antigua
                            </span>
                        </td>
                        <td>
                            <input class="w-100" name="lastPass" type="password" id="lastPass" value="" autocomplete="off">
                        </td>
                    </tr>
                    <tr>
                        <td class="col-2">
                            <span>
                                <i class="bi bi-info-circle text-white d-none d-md-inline-block" title="Introduzca la nueva contraseña" role="button"></i>
                                Nueva contrase&ntilde;a
                            </span>
                        </td>
                        <td>
                            <input class="w-100" name="newPass" type="password" id="newPass" value="" autocomplete="off">
                        </td>
                    </tr>
                    <tr>
                        <td class="col-2">
                            <span>
                                <i class="bi bi-info-circle text-white d-none d-md-inline-block" title="Introduzca nuevamente la contraseña" role="button"></i>
                                Repita contrase&ntilde;a
                            </span>
                        </td>
                        <td>
                            <input class="w-100" name="confirmPass" type="password" id="confirmPass" value="" autocomplete="off">
                        </td>
                    </tr>
                    <div id="resMessage" class="d-none alert alert-warning font-weight-bold text-center mt-3" role="alert"></div>
                    <tr>
                        <td colspan="2" class="text-center">
                            <input class="w-100" name="uname" type="hidden" id="uname" value="{{uname}}" autocomplete="off">
                            <button type="send" class="btn btn-warning text-white w-50">Guardar</button>
                        </td>
                    </tr>
                </tbody>
            </table>
        </form>
    </section>
</div>
<script type="text/javascript">
    document.forms.pwdForm.addEventListener('submit', (event) => {
        event.preventDefault();
        const resDiv = document.querySelector('div#resMessage'), formElem = event.target, formData = new FormData(formElem);
        if(resDiv && resDiv.childElementCount === 0) {
            setTimeout(() => {
                if(resDiv) resDiv.innerHTML = '';
                if(resDiv && !resDiv.classList.contains('d-none')) resDiv.classList.add('d-none');
                resDiv.classList.replace('alert-success', 'alert-warning');
                resDiv.classList.replace('alert-danger', 'alert-warning');
            }, 4000);
        }
        if(formElem.lastPass && formElem.lastPass.value.trim().length === 0){
            formElem.lastPass.focus();
            resDiv.classList.remove('d-none');
            resDiv.innerHTML = `La contraseña está vacía`
        }
        else if(formElem.newPass && formElem.newPass.value.trim().length === 0){
            formElem.newPass.focus();
            resDiv.classList.remove('d-none');
            resDiv.innerHTML = `La nueva contraseña está vacía`;
        }
        else if(formElem.confirmPass && formElem.confirmPass.value.trim().length === 0){
            formElem.confirmPass.focus();
            resDiv.classList.remove('d-none');
            resDiv.innerHTML = `Repetir la contraseña está vacía`;
        }
        else if(formElem.newPass && formElem.confirmPass && (formElem.newPass.value.trim() !== formElem.confirmPass.value.trim())){
            formElem.newPass.focus();
            resDiv.classList.remove('d-none');
            resDiv.innerHTML = `La nueva contraseña debe coincidir`;
        }
        else if(formElem.newPass && formElem.lastPass && (formElem.newPass.value.trim() === formElem.lastPass.value.trim())){
            formElem.newPass.focus();
            resDiv.classList.remove('d-none');
            resDiv.innerHTML = `No puede ser igual a la antigua`;
        }
        else if(formElem.newPass && formElem.confirmPass && (formElem.newPass.value.trim().length < 5 || formElem.confirmPass.value.trim().length < 5)){
            formElem.newPass.value = '';
            formElem.confirmPass.value = '';
            formElem.newPass.focus();
            resDiv.classList.remove('d-none');
            resDiv.innerHTML = `La nueva contraseña debe tener como mínimo 5 carácteres`;
        }
        else{
            let xhr = new XMLHttpRequest();
            const json = JSON.stringify(Array.from(formData).reduce((o,[k,v])=>(o[k]=v,o),{}));
            xhr.open("POST", formElem.getAttribute("action"), true);
            xhr.setRequestHeader('Content-Type', 'application/json');
            xhr.onreadystatechange = function() {
                if (xhr.readyState == 0) {
                    resDiv.classList.remove('d-none');
                    resDiv.innerHTML = `No se pudo enviar...`
                }
                if (xhr.readyState == 4) {
                    if(resDiv && resDiv.classList.contains('d-none')) {
                        resDiv.classList.remove('d-none');
                    }
                    resDiv.innerHTML = xhr.responseText;
                    if(xhr.status === 201){
                        resDiv.classList.replace('alert-warning', 'alert-success')
                        resDiv.classList.replace('alert-danger', 'alert-success')
                        setTimeout(() => {
                            window.location.replace("/auth/logout");
                        }, 4000);
                    }
                    if(xhr.status >= 400 && xhr.status < 500){
                        resDiv.classList.replace('alert-warning', 'alert-danger')
                        resDiv.classList.replace('alert-success', 'alert-danger')
                        setTimeout(() => {
                            window.location.replace("/auth/logout");
                        }, 1400);
                    }
                }
                if(formElem.lastPass){
                    formElem.lastPass.value = '';
                }
                if(formElem.newPass){
                    formElem.newPass.value = '';
                }
                if(formElem.confirmPass){
                    formElem.confirmPass.value = '';
                }
            };
            xhr.send(json);
        }
    })
</script>